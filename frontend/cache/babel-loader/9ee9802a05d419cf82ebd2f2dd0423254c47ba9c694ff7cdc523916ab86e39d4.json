{"ast":null,"code":"var _jsxFileName = \"/Users/emlanis/Desktop/secret-ai-writer/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './App.css';\n\n// API URL - adjust if your backend runs on a different port\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5001/api';\n\n// Timeout constants (in milliseconds)\nconst GENERATE_TIMEOUT = 180000; // 3 minutes\nconst ENHANCE_TIMEOUT = 120000; // 2 minutes\n\n// Enhancement types\nconst enhancementTypes = [{\n  id: 'grammar',\n  label: 'Grammar & Spelling'\n}, {\n  id: 'creativity',\n  label: 'Make More Creative'\n}, {\n  id: 'conciseness',\n  label: 'Make More Concise'\n}, {\n  id: 'professional',\n  label: 'Professional Tone'\n}, {\n  id: 'casual',\n  label: 'Casual & Conversational'\n}];\n\n// Mock functions to use as fallbacks when API calls fail\nconst mockStoreDraft = (content, metadata) => {\n  // Store in localStorage as a simple fallback\n  const draftId = `draft_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\n  const draftData = {\n    id: draftId,\n    content,\n    metadata: {\n      ...metadata,\n      timestamp: Date.now(),\n      title: metadata.title || `Draft ${new Date().toLocaleString()}`\n    },\n    tx_hash: `mock_tx_${Math.random().toString(36).substring(2, 15)}`\n  };\n  try {\n    // Get existing drafts\n    let existingDrafts = [];\n    try {\n      const storedDrafts = localStorage.getItem('mockDrafts');\n      if (storedDrafts) {\n        existingDrafts = JSON.parse(storedDrafts);\n        if (!Array.isArray(existingDrafts)) {\n          existingDrafts = [];\n        }\n      }\n    } catch (e) {\n      console.error('Error parsing stored drafts:', e);\n      existingDrafts = [];\n    }\n\n    // Add new draft at the beginning (newest first)\n    existingDrafts.unshift(draftData);\n\n    // Save updated drafts\n    localStorage.setItem('mockDrafts', JSON.stringify(existingDrafts));\n    return {\n      success: true,\n      tx_hash: draftData.tx_hash,\n      draft_id: draftId\n    };\n  } catch (error) {\n    console.error('Error in mock storage:', error);\n    throw error;\n  }\n};\nconst mockRetrieveDrafts = () => {\n  try {\n    const storedData = localStorage.getItem('mockDrafts');\n    if (storedData) {\n      const drafts = JSON.parse(storedData);\n      if (Array.isArray(drafts) && drafts.length > 0) {\n        return {\n          found: true,\n          drafts: drafts\n        };\n      }\n    }\n    return {\n      found: false,\n      drafts: []\n    };\n  } catch (error) {\n    console.error('Error in mock drafts retrieval:', error);\n    return {\n      found: false,\n      drafts: []\n    };\n  }\n};\nconst mockRetrieveDraft = () => {\n  try {\n    const result = mockRetrieveDrafts();\n    if (result.found && result.drafts.length > 0) {\n      // Return the most recent draft\n      return {\n        found: true,\n        content: result.drafts[0].content,\n        metadata: result.drafts[0].metadata\n      };\n    }\n    return {\n      found: false,\n      content: '',\n      metadata: {}\n    };\n  } catch (error) {\n    console.error('Error in mock retrieval:', error);\n    throw error;\n  }\n};\n\n// Create a timeout promise to race against fetch operations\nconst timeoutPromise = (ms, message) => {\n  return new Promise((_, reject) => {\n    setTimeout(() => {\n      reject(new Error(message));\n    }, ms);\n  });\n};\n\n// Main App component\nfunction App() {\n  _s();\n  // Content and prompt states\n  const [content, setContent] = useState('');\n  const [prompt, setPrompt] = useState('');\n  const [draftTitle, setDraftTitle] = useState('');\n\n  // UI state\n  const [activeTab, setActiveTab] = useState('generate');\n  const [activeSideTab, setActiveSideTab] = useState('howItWorks');\n  const [selectedEnhancement, setSelectedEnhancement] = useState(enhancementTypes[0].id);\n\n  // Loading and error states\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [error, setError] = useState('');\n  const [saving, setSaving] = useState(false);\n  const [saveSuccess, setSaveSuccess] = useState(false);\n\n  // Progress message for long operations\n  const [progressMessage, setProgressMessage] = useState('');\n\n  // Wallet states\n  const [walletAddress, setWalletAddress] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n\n  // Metadata state\n  const [metadata, setMetadata] = useState(null);\n\n  // Draft retrieval states\n  const [storedDrafts, setStoredDrafts] = useState([]);\n  const [loadingDrafts, setLoadingDrafts] = useState(false);\n  const [draftError, setDraftError] = useState('');\n\n  // Export/import state\n  const [exportFormat, setExportFormat] = useState('json');\n  const [importError, setImportError] = useState('');\n\n  // File input ref for import\n  const fileInputRef = useRef(null);\n\n  // Refs for timers\n  const progressTimerRef = useRef(null);\n  const longProgressTimerRef = useRef(null);\n\n  // Helper function to handle API response\n  const handleResponse = async response => {\n    const contentType = response.headers.get('content-type');\n    if (contentType && contentType.includes('application/json')) {\n      return await response.json();\n    }\n    throw new Error('Received non-JSON response from server');\n  };\n\n  // Function to fetch all drafts\n  const fetchAllDrafts = useCallback(async () => {\n    if (!isConnected || !walletAddress) return;\n    setLoadingDrafts(true);\n    setDraftError('');\n    try {\n      const response = await fetch(`${API_URL}/retrieve-all-drafts`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_address: walletAddress\n        })\n      });\n      let data;\n      try {\n        data = await handleResponse(response);\n      } catch (error) {\n        console.error('Error parsing response:', error);\n        // Fall back to mock data\n        data = mockRetrieveDrafts();\n        console.log('Using mock drafts data:', data);\n      }\n      if (data.found && data.drafts && data.drafts.length > 0) {\n        // Process all drafts\n        const processedDrafts = data.drafts.map(draft => {\n          var _draft$metadata, _draft$metadata2, _draft$metadata3;\n          return {\n            id: draft.id || `draft_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n            content: draft.content || '',\n            title: ((_draft$metadata = draft.metadata) === null || _draft$metadata === void 0 ? void 0 : _draft$metadata.title) || new Date(((_draft$metadata2 = draft.metadata) === null || _draft$metadata2 === void 0 ? void 0 : _draft$metadata2.timestamp) || Date.now()).toLocaleString(),\n            timestamp: ((_draft$metadata3 = draft.metadata) === null || _draft$metadata3 === void 0 ? void 0 : _draft$metadata3.timestamp) || Date.now(),\n            wordCount: typeof draft.content === 'string' ? (draft.content || '').split(/\\s+/).filter(Boolean).length : 0\n          };\n        });\n        setStoredDrafts(processedDrafts);\n      } else {\n        setStoredDrafts([]);\n      }\n    } catch (error) {\n      console.error('Error retrieving drafts:', error);\n      setDraftError('Error retrieving drafts. Using local storage as fallback.');\n\n      // Try to use mockRetrieveDrafts as fallback\n      try {\n        const mockData = mockRetrieveDrafts();\n        if (mockData.found && mockData.drafts && mockData.drafts.length > 0) {\n          const processedDrafts = mockData.drafts.map(draft => {\n            var _draft$metadata4, _draft$metadata5, _draft$metadata6;\n            return {\n              id: draft.id || `draft_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n              content: draft.content || '',\n              title: ((_draft$metadata4 = draft.metadata) === null || _draft$metadata4 === void 0 ? void 0 : _draft$metadata4.title) || new Date(((_draft$metadata5 = draft.metadata) === null || _draft$metadata5 === void 0 ? void 0 : _draft$metadata5.timestamp) || Date.now()).toLocaleString(),\n              timestamp: ((_draft$metadata6 = draft.metadata) === null || _draft$metadata6 === void 0 ? void 0 : _draft$metadata6.timestamp) || Date.now(),\n              wordCount: typeof draft.content === 'string' ? (draft.content || '').split(/\\s+/).filter(Boolean).length : 0\n            };\n          });\n          setStoredDrafts(processedDrafts);\n        } else {\n          setStoredDrafts([]);\n        }\n      } catch (mockError) {\n        console.error('Mock retrieval also failed:', mockError);\n        setStoredDrafts([]);\n      }\n    } finally {\n      setLoadingDrafts(false);\n    }\n  }, [isConnected, walletAddress]);\n\n  // Fetch drafts when wallet is connected\n  useEffect(() => {\n    if (isConnected && walletAddress) {\n      fetchAllDrafts();\n    }\n  }, [isConnected, walletAddress, fetchAllDrafts]);\n\n  // Clean up any timers on unmount\n  useEffect(() => {\n    return () => {\n      if (progressTimerRef.current) clearTimeout(progressTimerRef.current);\n      if (longProgressTimerRef.current) clearTimeout(longProgressTimerRef.current);\n    };\n  }, []);\n\n  // Add CSS for the spinner to the document\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.innerHTML = `\n      @keyframes spin {\n        to {\n          transform: rotate(360deg);\n        }\n      }\n      .loading-spinner {\n        display: inline-block;\n        width: 1.5rem;\n        height: 1.5rem;\n        border: 0.2rem solid rgba(156, 163, 175, 0.3);\n        border-radius: 50%;\n        border-top-color: var(--secret-purple);\n        animation: spin 1s linear infinite;\n      }\n    `;\n    document.head.appendChild(style);\n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []);\n  const loadDraft = draft => {\n    if (draft && draft.content) {\n      setContent(draft.content);\n      if (draft.title) {\n        setDraftTitle(draft.title);\n      }\n    }\n  };\n  const deleteDraft = async draftId => {\n    if (!isConnected || !walletAddress) return;\n    try {\n      const response = await fetch(`${API_URL}/delete-draft`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_address: walletAddress,\n          draft_id: draftId\n        })\n      });\n      await handleResponse(response);\n\n      // Refresh drafts list\n      fetchAllDrafts();\n    } catch (error) {\n      console.error('Error deleting draft:', error);\n\n      // Fallback: delete from local list\n      setStoredDrafts(prevDrafts => prevDrafts.filter(draft => draft.id !== draftId));\n\n      // Also update localStorage if using mock\n      try {\n        const mockData = mockRetrieveDrafts();\n        if (mockData.found) {\n          const updatedDrafts = mockData.drafts.filter(draft => draft.id !== draftId);\n          localStorage.setItem('mockDrafts', JSON.stringify(updatedDrafts));\n        }\n      } catch (e) {\n        console.error('Error updating mock storage:', e);\n      }\n    }\n  };\n  const connectWallet = async () => {\n    // Check if Keplr is installed\n    if (!window.keplr) {\n      alert(\"Please install Keplr extension\");\n      return;\n    }\n    try {\n      // Request connection to Keplr\n      await window.keplr.enable(\"pulsar-3\"); // Use \"secret-4\" for mainnet\n\n      // Get the signer for Secret Network\n      const offlineSigner = window.keplr.getOfflineSigner(\"pulsar-3\");\n\n      // Get the user's address\n      const accounts = await offlineSigner.getAccounts();\n      const address = accounts[0].address;\n\n      // Update state\n      setWalletAddress(address);\n      setIsConnected(true);\n      console.log(\"Connected to wallet:\", address);\n    } catch (error) {\n      console.error(\"Error connecting to Keplr:\", error);\n      alert(\"Failed to connect wallet: \" + error.message);\n    }\n  };\n  const handleGenerateContent = async e => {\n    e.preventDefault();\n    if (!prompt || !prompt.trim()) return;\n    setIsGenerating(true);\n    setError('');\n    setProgressMessage('');\n\n    // Clear any existing timers\n    if (progressTimerRef.current) clearTimeout(progressTimerRef.current);\n    if (longProgressTimerRef.current) clearTimeout(longProgressTimerRef.current);\n\n    // Set up progress message timers\n    progressTimerRef.current = setTimeout(() => {\n      setProgressMessage('This might take a little while. Still working...');\n    }, 5000);\n    longProgressTimerRef.current = setTimeout(() => {\n      setProgressMessage('This is taking longer than expected. Please be patient...');\n    }, 20000);\n    try {\n      // Race between fetch and timeout\n      const result = await Promise.race([(async () => {\n        // Make API call to backend\n        const response = await fetch(`${API_URL}/generate`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            prompt,\n            user_address: walletAddress || 'dev_mode_address',\n            system_instruction: null\n          })\n        });\n        return await handleResponse(response);\n      })(), timeoutPromise(GENERATE_TIMEOUT, 'Content generation timed out. Try a shorter prompt or try again later.')]);\n      setContent(result.content || '');\n      setMetadata(result.metadata || null);\n\n      // Generate a title based on the prompt\n      const titlePreview = prompt.split(' ').slice(0, 5).join(' ') + '...';\n      setDraftTitle(`Draft: ${titlePreview}`);\n    } catch (error) {\n      console.error('Error generating content:', error);\n      setError(error.message || 'Failed to generate content');\n    } finally {\n      setIsGenerating(false);\n      setProgressMessage('');\n      if (progressTimerRef.current) clearTimeout(progressTimerRef.current);\n      if (longProgressTimerRef.current) clearTimeout(longProgressTimerRef.current);\n    }\n  };\n  const handleEnhanceContent = async e => {\n    e.preventDefault();\n    if (!content || !content.trim() || !selectedEnhancement) return;\n    setIsGenerating(true);\n    setError('');\n    setProgressMessage('');\n\n    // Clear any existing timers\n    if (progressTimerRef.current) clearTimeout(progressTimerRef.current);\n    if (longProgressTimerRef.current) clearTimeout(longProgressTimerRef.current);\n\n    // Set up progress message timers\n    progressTimerRef.current = setTimeout(() => {\n      setProgressMessage('Enhancing your content. Please wait...');\n    }, 5000);\n    longProgressTimerRef.current = setTimeout(() => {\n      setProgressMessage('Still enhancing. This might take a bit longer...');\n    }, 20000);\n    try {\n      // Race between fetch and timeout\n      const result = await Promise.race([(async () => {\n        // Make API call to backend\n        const response = await fetch(`${API_URL}/enhance`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            draft_text: content,\n            enhancement_type: selectedEnhancement,\n            user_address: walletAddress || 'dev_mode_address'\n          })\n        });\n        return await handleResponse(response);\n      })(), timeoutPromise(ENHANCE_TIMEOUT, 'Enhancement timed out. Try a shorter text or try again later.')]);\n      setContent(result.content || '');\n      setMetadata(result.metadata || null);\n\n      // Update title if not set\n      if (!draftTitle) {\n        var _enhancementTypes$fin;\n        setDraftTitle(`Enhanced Draft (${((_enhancementTypes$fin = enhancementTypes.find(t => t.id === selectedEnhancement)) === null || _enhancementTypes$fin === void 0 ? void 0 : _enhancementTypes$fin.label) || selectedEnhancement})`);\n      }\n    } catch (error) {\n      console.error('Error enhancing content:', error);\n      setError(error.message || 'Failed to enhance content');\n    } finally {\n      setIsGenerating(false);\n      setProgressMessage('');\n      if (progressTimerRef.current) clearTimeout(progressTimerRef.current);\n      if (longProgressTimerRef.current) clearTimeout(longProgressTimerRef.current);\n    }\n  };\n  const handleSaveDraft = async () => {\n    if (!isConnected) {\n      alert('Please connect your wallet first');\n      return;\n    }\n    if (!content || !content.trim()) {\n      return;\n    }\n    setSaving(true);\n    setError('');\n\n    // Use draft title or generate one if empty\n    const finalTitle = draftTitle || `Draft ${new Date().toLocaleString()}`;\n    try {\n      // Call the backend to store on blockchain\n      const response = await fetch(`${API_URL}/store-draft`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content,\n          user_address: walletAddress,\n          metadata: {\n            ...(metadata || {}),\n            timestamp: Date.now(),\n            content_type: 'text',\n            word_count: content.split(/\\s+/).filter(Boolean).length,\n            title: finalTitle\n          }\n        })\n      });\n      try {\n        // Try to parse response as JSON\n        await handleResponse(response);\n        setSaveSuccess(true);\n        setTimeout(() => setSaveSuccess(false), 3000);\n\n        // Refresh drafts after saving\n        fetchAllDrafts();\n      } catch (parseError) {\n        console.error('Error parsing store response:', parseError);\n\n        // Fall back to mock storage\n        const mockResult = mockStoreDraft(content, {\n          ...(metadata || {}),\n          timestamp: Date.now(),\n          content_type: 'text',\n          word_count: content.split(/\\s+/).filter(Boolean).length,\n          title: finalTitle\n        });\n        console.log('Used mock storage:', mockResult);\n        setSaveSuccess(true);\n        setTimeout(() => setSaveSuccess(false), 3000);\n\n        // Refresh mock drafts\n        const mockData = mockRetrieveDrafts();\n        if (mockData.found) {\n          const processedDrafts = mockData.drafts.map(draft => {\n            var _draft$metadata7, _draft$metadata8, _draft$metadata9;\n            return {\n              id: draft.id || `draft_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n              content: draft.content || '',\n              title: ((_draft$metadata7 = draft.metadata) === null || _draft$metadata7 === void 0 ? void 0 : _draft$metadata7.title) || new Date(((_draft$metadata8 = draft.metadata) === null || _draft$metadata8 === void 0 ? void 0 : _draft$metadata8.timestamp) || Date.now()).toLocaleString(),\n              timestamp: ((_draft$metadata9 = draft.metadata) === null || _draft$metadata9 === void 0 ? void 0 : _draft$metadata9.timestamp) || Date.now(),\n              wordCount: typeof draft.content === 'string' ? (draft.content || '').split(/\\s+/).filter(Boolean).length : 0\n            };\n          });\n          setStoredDrafts(processedDrafts);\n        }\n      }\n    } catch (error) {\n      console.error('Error saving draft:', error);\n      setError('Server error. Draft saved to local storage as fallback.');\n\n      // Try mock storage as fallback\n      try {\n        mockStoreDraft(content, {\n          ...(metadata || {}),\n          timestamp: Date.now(),\n          content_type: 'text',\n          word_count: content.split(/\\s+/).filter(Boolean).length,\n          title: finalTitle\n        });\n        setSaveSuccess(true);\n        setTimeout(() => setSaveSuccess(false), 3000);\n\n        // Refresh mock drafts\n        const mockData = mockRetrieveDrafts();\n        if (mockData.found) {\n          const processedDrafts = mockData.drafts.map(draft => {\n            var _draft$metadata10, _draft$metadata11, _draft$metadata12;\n            return {\n              id: draft.id || `draft_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n              content: draft.content || '',\n              title: ((_draft$metadata10 = draft.metadata) === null || _draft$metadata10 === void 0 ? void 0 : _draft$metadata10.title) || new Date(((_draft$metadata11 = draft.metadata) === null || _draft$metadata11 === void 0 ? void 0 : _draft$metadata11.timestamp) || Date.now()).toLocaleString(),\n              timestamp: ((_draft$metadata12 = draft.metadata) === null || _draft$metadata12 === void 0 ? void 0 : _draft$metadata12.timestamp) || Date.now(),\n              wordCount: typeof draft.content === 'string' ? (draft.content || '').split(/\\s+/).filter(Boolean).length : 0\n            };\n          });\n          setStoredDrafts(processedDrafts);\n        }\n      } catch (mockError) {\n        console.error('Mock storage also failed:', mockError);\n        setError('Failed to save draft anywhere. Please try again.');\n      }\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // Export current draft to file\n  const exportDraft = () => {\n    if (!content || !content.trim()) {\n      alert('No content to export');\n      return;\n    }\n    try {\n      let exportData, filename, dataType;\n      const draftData = {\n        title: draftTitle || 'Untitled Draft',\n        content: content,\n        metadata: metadata || {\n          timestamp: Date.now(),\n          word_count: content.split(/\\s+/).filter(Boolean).length\n        },\n        exported_at: new Date().toISOString()\n      };\n      if (exportFormat === 'json') {\n        exportData = JSON.stringify(draftData, null, 2);\n        filename = `${draftTitle || 'draft'}-${Date.now()}.json`;\n        dataType = 'application/json';\n      } else if (exportFormat === 'txt') {\n        exportData = `${draftTitle || 'Untitled Draft'}\\n\\n${content}\\n\\n---\\nExported: ${new Date().toLocaleString()}`;\n        filename = `${draftTitle || 'draft'}-${Date.now()}.txt`;\n        dataType = 'text/plain';\n      } else if (exportFormat === 'md') {\n        exportData = `# ${draftTitle || 'Untitled Draft'}\\n\\n${content}\\n\\n---\\n*Exported: ${new Date().toLocaleString()}*`;\n        filename = `${draftTitle || 'draft'}-${Date.now()}.md`;\n        dataType = 'text/markdown';\n      }\n\n      // Create a Blob and download link\n      const blob = new Blob([exportData], {\n        type: dataType\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n\n      // Clean up\n      setTimeout(() => {\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n      }, 100);\n    } catch (error) {\n      console.error('Error exporting draft:', error);\n      alert('Error exporting draft: ' + error.message);\n    }\n  };\n\n  // Import draft from file\n  const importDraft = async e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    setImportError('');\n    try {\n      const reader = new FileReader();\n      reader.onload = event => {\n        try {\n          var _event$target;\n          const fileContent = (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.result;\n          if (!fileContent) throw new Error('Failed to read file');\n          let importedContent, importedTitle;\n\n          // Check file type\n          if (file.name.endsWith('.json')) {\n            // JSON format\n            const jsonData = JSON.parse(fileContent.toString());\n            importedContent = jsonData.content || '';\n            importedTitle = jsonData.title || '';\n          } else if (file.name.endsWith('.txt') || file.name.endsWith('.md')) {\n            // Text/Markdown format - simple extraction\n            const textLines = fileContent.toString().split('\\n');\n            importedTitle = textLines[0] || '';\n            importedContent = textLines.slice(2).join('\\n') || '';\n          } else {\n            throw new Error('Unsupported file format. Please use .json, .txt, or .md files.');\n          }\n\n          // Update editor with imported content\n          if (importedContent) {\n            setContent(importedContent);\n            if (importedTitle) {\n              setDraftTitle(importedTitle);\n            }\n          } else {\n            throw new Error('Could not extract content from file');\n          }\n        } catch (error) {\n          console.error('Error parsing imported file:', error);\n          setImportError('Error importing file: ' + error.message);\n        }\n      };\n      reader.onerror = () => {\n        setImportError('Error reading file');\n      };\n      if (file.name.endsWith('.json')) {\n        reader.readAsText(file);\n      } else if (file.name.endsWith('.txt') || file.name.endsWith('.md')) {\n        reader.readAsText(file);\n      } else {\n        setImportError('Unsupported file format. Please use .json, .txt, or .md files.');\n      }\n    } catch (error) {\n      console.error('Error importing file:', error);\n      setImportError('Error importing file: ' + error.message);\n    } finally {\n      // Reset the file input\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Secret AI Writer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this), isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          color: 'var(--secret-dark)',\n          padding: '0.5rem 1rem',\n          borderRadius: '999px',\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '8px',\n            height: '8px',\n            borderRadius: '50%',\n            backgroundColor: 'green',\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 13\n        }, this), walletAddress ? `${walletAddress.substring(0, 8)}...${walletAddress.substring(walletAddress.length - 4)}` : 'Connected']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Privacy-Focused AI Writing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create content securely with AI assistance. All your drafts are encrypted and stored on the Secret Network blockchain.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"two-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                borderBottom: '1px solid #E5E7EB',\n                marginBottom: '1rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setActiveTab('generate'),\n                  className: `tab-button ${activeTab === 'generate' ? 'tab-active' : 'tab-inactive'}`,\n                  style: {\n                    width: '50%'\n                  },\n                  children: \"Generate New Content\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setActiveTab('enhance'),\n                  className: `tab-button ${activeTab === 'enhance' ? 'tab-active' : 'tab-inactive'}`,\n                  style: {\n                    width: '50%',\n                    opacity: !content || !content.trim() ? 0.5 : 1,\n                    cursor: content && content.trim() ? 'pointer' : 'not-allowed'\n                  },\n                  disabled: !content || !content.trim(),\n                  children: \"Enhance Current Draft\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 767,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 15\n            }, this), activeTab === 'generate' ? /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleGenerateContent,\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Write a prompt for the AI...\",\n                value: prompt || '',\n                onChange: e => setPrompt(e.target.value),\n                className: \"editor-area\",\n                style: {\n                  minHeight: '100px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '1rem',\n                  textAlign: 'right'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"button\",\n                  disabled: isGenerating || !prompt || !prompt.trim(),\n                  style: {\n                    opacity: isGenerating || !prompt || !prompt.trim() ? 0.7 : 1,\n                    cursor: isGenerating || !prompt || !prompt.trim() ? 'not-allowed' : 'pointer'\n                  },\n                  children: isGenerating ? 'Generating...' : 'Generate'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 792,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 19\n              }, this), isGenerating && progressMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '0.5rem',\n                  fontSize: '0.875rem',\n                  color: '#6B7280',\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-spinner\",\n                  style: {\n                    marginRight: '0.5rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 806,\n                  columnNumber: 23\n                }, this), progressMessage]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleEnhanceContent,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    display: 'block',\n                    marginBottom: '0.5rem',\n                    fontSize: '0.875rem',\n                    fontWeight: 'medium'\n                  },\n                  children: \"Select enhancement type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 814,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedEnhancement,\n                  onChange: e => setSelectedEnhancement(e.target.value),\n                  style: {\n                    width: '100%',\n                    padding: '0.5rem',\n                    borderRadius: '0.25rem',\n                    border: '1px solid #D1D5DB'\n                  },\n                  children: enhancementTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: type.id,\n                    children: type.label\n                  }, type.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 828,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '1rem',\n                  textAlign: 'right'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"button\",\n                  disabled: isGenerating || !content || !content.trim(),\n                  style: {\n                    opacity: isGenerating || !content || !content.trim() ? 0.7 : 1,\n                    cursor: isGenerating || !content || !content.trim() ? 'not-allowed' : 'pointer'\n                  },\n                  children: isGenerating ? 'Enhancing...' : 'Enhance'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 835,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 834,\n                columnNumber: 19\n              }, this), isGenerating && progressMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '0.5rem',\n                  fontSize: '0.875rem',\n                  color: '#6B7280',\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-spinner\",\n                  style: {\n                    marginRight: '0.5rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 849,\n                  columnNumber: 23\n                }, this), progressMessage]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-notification\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                marginBottom: '0.5rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"draft-title-container\",\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  flexGrow: 1,\n                  marginRight: '1rem'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: draftTitle || '',\n                  onChange: e => setDraftTitle(e.target.value),\n                  placeholder: \"Draft Title\",\n                  className: \"draft-title-input\",\n                  style: {\n                    fontWeight: 'bold',\n                    fontSize: '1.125rem',\n                    padding: '0.25rem 0.5rem',\n                    border: '1px solid transparent',\n                    borderRadius: '0.25rem',\n                    width: '100%',\n                    backgroundColor: 'transparent',\n                    transition: 'border-color 0.2s'\n                  },\n                  onFocus: e => e.target.style.borderColor = '#9986F0',\n                  onBlur: e => e.target.style.borderColor = 'transparent'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 866,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 865,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"draft-actions\",\n                style: {\n                  display: 'flex',\n                  gap: '0.5rem'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button\",\n                  onClick: handleSaveDraft,\n                  disabled: !content || !content.trim() || saving,\n                  style: {\n                    opacity: !content || !content.trim() || saving ? 0.7 : 1,\n                    cursor: !content || !content.trim() || saving ? 'not-allowed' : 'pointer'\n                  },\n                  children: saving ? 'Saving...' : '🔒 Store'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 887,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"editor-area\",\n              value: content || '',\n              onChange: e => setContent(e.target.value),\n              placeholder: \"AI-generated content will appear here...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 15\n            }, this), saveSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"success-notification\",\n              children: \"Draft saved successfully!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 17\n            }, this), importError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-notification\",\n              children: importError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"export-import-controls\",\n              style: {\n                marginTop: '0.75rem',\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"export-controls\",\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '0.5rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  value: exportFormat,\n                  onChange: e => setExportFormat(e.target.value),\n                  style: {\n                    padding: '0.25rem 0.5rem',\n                    fontSize: '0.875rem',\n                    borderRadius: '0.25rem',\n                    border: '1px solid #D1D5DB'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"json\",\n                    children: \"JSON\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 937,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"txt\",\n                    children: \"Text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 938,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"md\",\n                    children: \"Markdown\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 939,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 927,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: exportDraft,\n                  disabled: !content || !content.trim(),\n                  className: \"export-button\",\n                  style: {\n                    backgroundColor: '#F3F4F6',\n                    color: '#111827',\n                    border: 'none',\n                    padding: '0.25rem 0.5rem',\n                    borderRadius: '0.25rem',\n                    fontSize: '0.875rem',\n                    cursor: content && content.trim() ? 'pointer' : 'not-allowed',\n                    opacity: content && content.trim() ? 1 : 0.7,\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '0.25rem'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\uD83D\\uDCE4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 960,\n                    columnNumber: 21\n                  }, this), \" Export\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 941,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"import-controls\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  ref: fileInputRef,\n                  onChange: importDraft,\n                  accept: \".json,.txt,.md\",\n                  style: {\n                    display: 'none'\n                  },\n                  id: \"import-file\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 965,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => {\n                    var _fileInputRef$current;\n                    return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n                  },\n                  className: \"import-button\",\n                  style: {\n                    backgroundColor: '#F3F4F6',\n                    color: '#111827',\n                    border: 'none',\n                    padding: '0.25rem 0.5rem',\n                    borderRadius: '0.25rem',\n                    fontSize: '0.875rem',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '0.25rem'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\uD83D\\uDCE5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 990,\n                    columnNumber: 21\n                  }, this), \" Import\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 973,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 920,\n              columnNumber: 15\n            }, this), metadata && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '0.5rem',\n                fontSize: '0.75rem',\n                color: '#6B7280'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: '0.5rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Word count: \", (content || '').split(/\\s+/).filter(Boolean).length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 998,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\u2022\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 999,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Model: \", metadata.model || 'unknown']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1000,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\u2022\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1001,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Processing time: \", metadata.processing_time || '0', \"s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1002,\n                  columnNumber: 21\n                }, this), metadata.tx_hash && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u2022\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1005,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"TX: \", metadata.tx_hash.substring(0, 10), \"...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1006,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                borderBottom: '1px solid #E5E7EB',\n                marginBottom: '1rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setActiveSideTab('howItWorks'),\n                  className: `tab-button ${activeSideTab === 'howItWorks' ? 'tab-active' : 'tab-inactive'}`,\n                  style: {\n                    width: '50%'\n                  },\n                  children: \"How It Works\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1019,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setActiveSideTab('drafts'),\n                  className: `tab-button ${activeSideTab === 'drafts' ? 'tab-active' : 'tab-inactive'}`,\n                  style: {\n                    width: '50%'\n                  },\n                  children: \"Your Drafts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1026,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1018,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1017,\n              columnNumber: 15\n            }, this), activeSideTab === 'howItWorks' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"how-it-works\",\n              children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Connect your Keplr wallet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1039,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Write a prompt for AI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1040,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Edit your draft\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1041,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Store privately on blockchain\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1042,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Access your drafts anywhere\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1038,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '1rem',\n                  paddingTop: '1rem',\n                  borderTop: '1px solid #E5E7EB'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    fontSize: '1rem',\n                    fontWeight: 'medium',\n                    marginBottom: '0.5rem'\n                  },\n                  children: \"Features:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1047,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  style: {\n                    paddingLeft: '1.5rem',\n                    listStyleType: 'disc'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"AI-powered content generation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1049,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Multiple enhancement styles\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1050,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Encrypted blockchain storage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1051,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Export/import your drafts\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1052,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Privacy-first architecture\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1053,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1048,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1046,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"drafts-list\",\n              children: !isConnected ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Connect your wallet to view stored drafts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1060,\n                columnNumber: 21\n              }, this) : loadingDrafts ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'center',\n                  padding: '1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1063,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Loading drafts...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1064,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 21\n              }, this) : draftError ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-notification\",\n                children: draftError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1067,\n                columnNumber: 21\n              }, this) : storedDrafts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"drafts-container\",\n                children: storedDrafts.map(draft => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"draft-card\",\n                  style: {\n                    marginBottom: '0.75rem'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      justifyContent: 'space-between'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontWeight: 'medium',\n                        fontSize: '0.875rem'\n                      },\n                      children: draft.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1075,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: '0.75rem',\n                        color: '#6B7280'\n                      },\n                      children: new Date(draft.timestamp).toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1076,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1074,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: '0.75rem',\n                      color: '#6B7280',\n                      marginTop: '0.25rem'\n                    },\n                    children: [draft.wordCount, \" words\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1080,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      gap: '0.5rem',\n                      marginTop: '0.5rem'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"button\",\n                      style: {\n                        fontSize: '0.75rem',\n                        padding: '0.25rem 0.5rem',\n                        backgroundColor: '#F3F4F6',\n                        color: '#111827',\n                        flexGrow: 1\n                      },\n                      onClick: () => loadDraft(draft),\n                      children: \"Load\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1084,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      style: {\n                        fontSize: '0.75rem',\n                        padding: '0.25rem 0.5rem',\n                        backgroundColor: '#FEE2E2',\n                        color: '#B91C1C',\n                        border: 'none',\n                        borderRadius: '0.25rem',\n                        cursor: 'pointer'\n                      },\n                      onClick: () => {\n                        if (window.confirm('Are you sure you want to delete this draft?')) {\n                          deleteDraft(draft.id);\n                        }\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1097,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1083,\n                    columnNumber: 27\n                  }, this)]\n                }, draft.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1073,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1071,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No stored drafts found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1120,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1016,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      style: {\n        backgroundColor: 'var(--secret-dark)',\n        color: 'white',\n        padding: '1rem',\n        marginTop: '2rem',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2025 Secret AI Writer. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 725,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"32qU7hMwuJCf7OggQTf8hpvbl68=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","GENERATE_TIMEOUT","ENHANCE_TIMEOUT","enhancementTypes","id","label","mockStoreDraft","content","metadata","draftId","Date","now","Math","random","toString","substring","draftData","timestamp","title","toLocaleString","tx_hash","existingDrafts","storedDrafts","localStorage","getItem","JSON","parse","Array","isArray","e","console","error","unshift","setItem","stringify","success","draft_id","mockRetrieveDrafts","storedData","drafts","length","found","mockRetrieveDraft","result","timeoutPromise","ms","message","Promise","_","reject","setTimeout","Error","App","_s","setContent","prompt","setPrompt","draftTitle","setDraftTitle","activeTab","setActiveTab","activeSideTab","setActiveSideTab","selectedEnhancement","setSelectedEnhancement","isGenerating","setIsGenerating","setError","saving","setSaving","saveSuccess","setSaveSuccess","progressMessage","setProgressMessage","walletAddress","setWalletAddress","isConnected","setIsConnected","setMetadata","setStoredDrafts","loadingDrafts","setLoadingDrafts","draftError","setDraftError","exportFormat","setExportFormat","importError","setImportError","fileInputRef","progressTimerRef","longProgressTimerRef","handleResponse","response","contentType","headers","get","includes","json","fetchAllDrafts","fetch","method","body","user_address","data","log","processedDrafts","map","draft","_draft$metadata","_draft$metadata2","_draft$metadata3","wordCount","split","filter","Boolean","mockData","_draft$metadata4","_draft$metadata5","_draft$metadata6","mockError","current","clearTimeout","style","document","createElement","innerHTML","head","appendChild","removeChild","loadDraft","deleteDraft","prevDrafts","updatedDrafts","connectWallet","window","keplr","alert","enable","offlineSigner","getOfflineSigner","accounts","getAccounts","address","handleGenerateContent","preventDefault","trim","race","system_instruction","titlePreview","slice","join","handleEnhanceContent","draft_text","enhancement_type","_enhancementTypes$fin","find","t","handleSaveDraft","finalTitle","content_type","word_count","parseError","mockResult","_draft$metadata7","_draft$metadata8","_draft$metadata9","_draft$metadata10","_draft$metadata11","_draft$metadata12","exportDraft","exportData","filename","dataType","exported_at","toISOString","blob","Blob","type","url","URL","createObjectURL","a","href","download","click","revokeObjectURL","importDraft","_e$target$files","file","target","files","reader","FileReader","onload","event","_event$target","fileContent","importedContent","importedTitle","name","endsWith","jsonData","textLines","onerror","readAsText","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","color","padding","borderRadius","display","alignItems","width","height","marginRight","onClick","borderBottom","marginBottom","opacity","cursor","disabled","onSubmit","placeholder","onChange","minHeight","marginTop","textAlign","fontSize","fontWeight","border","justifyContent","flexGrow","transition","onFocus","borderColor","onBlur","gap","ref","accept","_fileInputRef$current","flexWrap","model","processing_time","paddingTop","borderTop","paddingLeft","listStyleType","confirm","_c","$RefreshReg$"],"sources":["/Users/emlanis/Desktop/secret-ai-writer/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './App.css';\n\n// API URL - adjust if your backend runs on a different port\nconst API_URL = 'http://localhost:5001/api';\n\n// Timeout constants (in milliseconds)\nconst GENERATE_TIMEOUT = 180000; // 3 minutes\nconst ENHANCE_TIMEOUT = 120000;  // 2 minutes\n\n// Enhancement types\nconst enhancementTypes = [\n  { id: 'grammar', label: 'Grammar & Spelling' },\n  { id: 'creativity', label: 'Make More Creative' },\n  { id: 'conciseness', label: 'Make More Concise' },\n  { id: 'professional', label: 'Professional Tone' },\n  { id: 'casual', label: 'Casual & Conversational' },\n];\n\n// Mock functions to use as fallbacks when API calls fail\nconst mockStoreDraft = (content, metadata) => {\n  // Store in localStorage as a simple fallback\n  const draftId = `draft_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\n  \n  const draftData = {\n    id: draftId,\n    content,\n    metadata: {\n      ...metadata,\n      timestamp: Date.now(),\n      title: metadata.title || `Draft ${new Date().toLocaleString()}`\n    },\n    tx_hash: `mock_tx_${Math.random().toString(36).substring(2, 15)}`\n  };\n  \n  try {\n    // Get existing drafts\n    let existingDrafts = [];\n    try {\n      const storedDrafts = localStorage.getItem('mockDrafts');\n      if (storedDrafts) {\n        existingDrafts = JSON.parse(storedDrafts);\n        if (!Array.isArray(existingDrafts)) {\n          existingDrafts = [];\n        }\n      }\n    } catch (e) {\n      console.error('Error parsing stored drafts:', e);\n      existingDrafts = [];\n    }\n    \n    // Add new draft at the beginning (newest first)\n    existingDrafts.unshift(draftData);\n    \n    // Save updated drafts\n    localStorage.setItem('mockDrafts', JSON.stringify(existingDrafts));\n    \n    return { \n      success: true, \n      tx_hash: draftData.tx_hash,\n      draft_id: draftId\n    };\n  } catch (error) {\n    console.error('Error in mock storage:', error);\n    throw error;\n  }\n};\n\nconst mockRetrieveDrafts = () => {\n  try {\n    const storedData = localStorage.getItem('mockDrafts');\n    if (storedData) {\n      const drafts = JSON.parse(storedData);\n      if (Array.isArray(drafts) && drafts.length > 0) {\n        return {\n          found: true,\n          drafts: drafts\n        };\n      }\n    }\n    return { found: false, drafts: [] };\n  } catch (error) {\n    console.error('Error in mock drafts retrieval:', error);\n    return { found: false, drafts: [] };\n  }\n};\n\nconst mockRetrieveDraft = () => {\n  try {\n    const result = mockRetrieveDrafts();\n    if (result.found && result.drafts.length > 0) {\n      // Return the most recent draft\n      return {\n        found: true,\n        content: result.drafts[0].content,\n        metadata: result.drafts[0].metadata\n      };\n    }\n    return { found: false, content: '', metadata: {} };\n  } catch (error) {\n    console.error('Error in mock retrieval:', error);\n    throw error;\n  }\n};\n\n// Create a timeout promise to race against fetch operations\nconst timeoutPromise = (ms, message) => {\n  return new Promise((_, reject) => {\n    setTimeout(() => {\n      reject(new Error(message));\n    }, ms);\n  });\n};\n\n// Main App component\nfunction App() {\n  // Content and prompt states\n  const [content, setContent] = useState('');\n  const [prompt, setPrompt] = useState('');\n  const [draftTitle, setDraftTitle] = useState('');\n  \n  // UI state\n  const [activeTab, setActiveTab] = useState('generate');\n  const [activeSideTab, setActiveSideTab] = useState('howItWorks');\n  const [selectedEnhancement, setSelectedEnhancement] = useState(enhancementTypes[0].id);\n  \n  // Loading and error states\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [error, setError] = useState('');\n  const [saving, setSaving] = useState(false);\n  const [saveSuccess, setSaveSuccess] = useState(false);\n  \n  // Progress message for long operations\n  const [progressMessage, setProgressMessage] = useState('');\n  \n  // Wallet states\n  const [walletAddress, setWalletAddress] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  \n  // Metadata state\n  const [metadata, setMetadata] = useState(null);\n  \n  // Draft retrieval states\n  const [storedDrafts, setStoredDrafts] = useState([]);\n  const [loadingDrafts, setLoadingDrafts] = useState(false);\n  const [draftError, setDraftError] = useState('');\n  \n  // Export/import state\n  const [exportFormat, setExportFormat] = useState('json');\n  const [importError, setImportError] = useState('');\n  \n  // File input ref for import\n  const fileInputRef = useRef(null);\n  \n  // Refs for timers\n  const progressTimerRef = useRef(null);\n  const longProgressTimerRef = useRef(null);\n  \n  // Helper function to handle API response\n  const handleResponse = async (response) => {\n    const contentType = response.headers.get('content-type');\n    if (contentType && contentType.includes('application/json')) {\n      return await response.json();\n    }\n    throw new Error('Received non-JSON response from server');\n  };\n  \n  // Function to fetch all drafts\n  const fetchAllDrafts = useCallback(async () => {\n    if (!isConnected || !walletAddress) return;\n    \n    setLoadingDrafts(true);\n    setDraftError('');\n    \n    try {\n      const response = await fetch(`${API_URL}/retrieve-all-drafts`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_address: walletAddress\n        }),\n      });\n      \n      let data;\n      try {\n        data = await handleResponse(response);\n      } catch (error) {\n        console.error('Error parsing response:', error);\n        // Fall back to mock data\n        data = mockRetrieveDrafts();\n        console.log('Using mock drafts data:', data);\n      }\n      \n      if (data.found && data.drafts && data.drafts.length > 0) {\n        // Process all drafts\n        const processedDrafts = data.drafts.map(draft => ({\n          id: draft.id || `draft_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n          content: draft.content || '',\n          title: draft.metadata?.title || new Date(draft.metadata?.timestamp || Date.now()).toLocaleString(),\n          timestamp: draft.metadata?.timestamp || Date.now(),\n          wordCount: typeof draft.content === 'string' \n            ? (draft.content || '').split(/\\s+/).filter(Boolean).length\n            : 0\n        }));\n        setStoredDrafts(processedDrafts);\n      } else {\n        setStoredDrafts([]);\n      }\n      \n    } catch (error) {\n      console.error('Error retrieving drafts:', error);\n      setDraftError('Error retrieving drafts. Using local storage as fallback.');\n      \n      // Try to use mockRetrieveDrafts as fallback\n      try {\n        const mockData = mockRetrieveDrafts();\n        if (mockData.found && mockData.drafts && mockData.drafts.length > 0) {\n          const processedDrafts = mockData.drafts.map(draft => ({\n            id: draft.id || `draft_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n            content: draft.content || '',\n            title: draft.metadata?.title || new Date(draft.metadata?.timestamp || Date.now()).toLocaleString(),\n            timestamp: draft.metadata?.timestamp || Date.now(),\n            wordCount: typeof draft.content === 'string' \n              ? (draft.content || '').split(/\\s+/).filter(Boolean).length\n              : 0\n          }));\n          setStoredDrafts(processedDrafts);\n        } else {\n          setStoredDrafts([]);\n        }\n      } catch (mockError) {\n        console.error('Mock retrieval also failed:', mockError);\n        setStoredDrafts([]);\n      }\n    } finally {\n      setLoadingDrafts(false);\n    }\n  }, [isConnected, walletAddress]); \n  \n  // Fetch drafts when wallet is connected\n  useEffect(() => {\n    if (isConnected && walletAddress) {\n      fetchAllDrafts();\n    }\n  }, [isConnected, walletAddress, fetchAllDrafts]);\n  \n  // Clean up any timers on unmount\n  useEffect(() => {\n    return () => {\n      if (progressTimerRef.current) clearTimeout(progressTimerRef.current);\n      if (longProgressTimerRef.current) clearTimeout(longProgressTimerRef.current);\n    };\n  }, []);\n  \n  // Add CSS for the spinner to the document\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.innerHTML = `\n      @keyframes spin {\n        to {\n          transform: rotate(360deg);\n        }\n      }\n      .loading-spinner {\n        display: inline-block;\n        width: 1.5rem;\n        height: 1.5rem;\n        border: 0.2rem solid rgba(156, 163, 175, 0.3);\n        border-radius: 50%;\n        border-top-color: var(--secret-purple);\n        animation: spin 1s linear infinite;\n      }\n    `;\n    document.head.appendChild(style);\n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []);\n  \n  const loadDraft = (draft) => {\n    if (draft && draft.content) {\n      setContent(draft.content);\n      if (draft.title) {\n        setDraftTitle(draft.title);\n      }\n    }\n  };\n  \n  const deleteDraft = async (draftId) => {\n    if (!isConnected || !walletAddress) return;\n    \n    try {\n      const response = await fetch(`${API_URL}/delete-draft`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_address: walletAddress,\n          draft_id: draftId\n        }),\n      });\n      \n      await handleResponse(response);\n      \n      // Refresh drafts list\n      fetchAllDrafts();\n    } catch (error) {\n      console.error('Error deleting draft:', error);\n      \n      // Fallback: delete from local list\n      setStoredDrafts(prevDrafts => prevDrafts.filter(draft => draft.id !== draftId));\n      \n      // Also update localStorage if using mock\n      try {\n        const mockData = mockRetrieveDrafts();\n        if (mockData.found) {\n          const updatedDrafts = mockData.drafts.filter(draft => draft.id !== draftId);\n          localStorage.setItem('mockDrafts', JSON.stringify(updatedDrafts));\n        }\n      } catch (e) {\n        console.error('Error updating mock storage:', e);\n      }\n    }\n  };\n  \n  const connectWallet = async () => {\n    // Check if Keplr is installed\n    if (!window.keplr) {\n      alert(\"Please install Keplr extension\");\n      return;\n    }\n\n    try {\n      // Request connection to Keplr\n      await window.keplr.enable(\"pulsar-3\"); // Use \"secret-4\" for mainnet\n      \n      // Get the signer for Secret Network\n      const offlineSigner = window.keplr.getOfflineSigner(\"pulsar-3\");\n      \n      // Get the user's address\n      const accounts = await offlineSigner.getAccounts();\n      const address = accounts[0].address;\n      \n      // Update state\n      setWalletAddress(address);\n      setIsConnected(true);\n      \n      console.log(\"Connected to wallet:\", address);\n    } catch (error) {\n      console.error(\"Error connecting to Keplr:\", error);\n      alert(\"Failed to connect wallet: \" + error.message);\n    }\n  };\n\n  const handleGenerateContent = async (e) => {\n    e.preventDefault();\n    if (!prompt || !prompt.trim()) return;\n    \n    setIsGenerating(true);\n    setError('');\n    setProgressMessage('');\n    \n    // Clear any existing timers\n    if (progressTimerRef.current) clearTimeout(progressTimerRef.current);\n    if (longProgressTimerRef.current) clearTimeout(longProgressTimerRef.current);\n    \n    // Set up progress message timers\n    progressTimerRef.current = setTimeout(() => {\n      setProgressMessage('This might take a little while. Still working...');\n    }, 5000);\n    \n    longProgressTimerRef.current = setTimeout(() => {\n      setProgressMessage('This is taking longer than expected. Please be patient...');\n    }, 20000);\n    \n    try {\n      // Race between fetch and timeout\n      const result = await Promise.race([\n        (async () => {\n          // Make API call to backend\n          const response = await fetch(`${API_URL}/generate`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              prompt,\n              user_address: walletAddress || 'dev_mode_address',\n              system_instruction: null\n            }),\n          });\n          \n          return await handleResponse(response);\n        })(),\n        timeoutPromise(GENERATE_TIMEOUT, 'Content generation timed out. Try a shorter prompt or try again later.')\n      ]);\n      \n      setContent(result.content || '');\n      setMetadata(result.metadata || null);\n      \n      // Generate a title based on the prompt\n      const titlePreview = prompt.split(' ').slice(0, 5).join(' ') + '...';\n      setDraftTitle(`Draft: ${titlePreview}`);\n      \n    } catch (error) {\n      console.error('Error generating content:', error);\n      setError(error.message || 'Failed to generate content');\n    } finally {\n      setIsGenerating(false);\n      setProgressMessage('');\n      if (progressTimerRef.current) clearTimeout(progressTimerRef.current);\n      if (longProgressTimerRef.current) clearTimeout(longProgressTimerRef.current);\n    }\n  };\n  \n  const handleEnhanceContent = async (e) => {\n    e.preventDefault();\n    if (!content || !content.trim() || !selectedEnhancement) return;\n    \n    setIsGenerating(true);\n    setError('');\n    setProgressMessage('');\n    \n    // Clear any existing timers\n    if (progressTimerRef.current) clearTimeout(progressTimerRef.current);\n    if (longProgressTimerRef.current) clearTimeout(longProgressTimerRef.current);\n    \n    // Set up progress message timers\n    progressTimerRef.current = setTimeout(() => {\n      setProgressMessage('Enhancing your content. Please wait...');\n    }, 5000);\n    \n    longProgressTimerRef.current = setTimeout(() => {\n      setProgressMessage('Still enhancing. This might take a bit longer...');\n    }, 20000);\n    \n    try {\n      // Race between fetch and timeout\n      const result = await Promise.race([\n        (async () => {\n          // Make API call to backend\n          const response = await fetch(`${API_URL}/enhance`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              draft_text: content,\n              enhancement_type: selectedEnhancement,\n              user_address: walletAddress || 'dev_mode_address'\n            }),\n          });\n          \n          return await handleResponse(response);\n        })(),\n        timeoutPromise(ENHANCE_TIMEOUT, 'Enhancement timed out. Try a shorter text or try again later.')\n      ]);\n      \n      setContent(result.content || '');\n      setMetadata(result.metadata || null);\n      \n      // Update title if not set\n      if (!draftTitle) {\n        setDraftTitle(`Enhanced Draft (${enhancementTypes.find(t => t.id === selectedEnhancement)?.label || selectedEnhancement})`);\n      }\n      \n    } catch (error) {\n      console.error('Error enhancing content:', error);\n      setError(error.message || 'Failed to enhance content');\n    } finally {\n      setIsGenerating(false);\n      setProgressMessage('');\n      if (progressTimerRef.current) clearTimeout(progressTimerRef.current);\n      if (longProgressTimerRef.current) clearTimeout(longProgressTimerRef.current);\n    }\n  };\n\n  const handleSaveDraft = async () => {\n    if (!isConnected) {\n      alert('Please connect your wallet first');\n      return;\n    }\n    \n    if (!content || !content.trim()) {\n      return;\n    }\n    \n    setSaving(true);\n    setError('');\n    \n    // Use draft title or generate one if empty\n    const finalTitle = draftTitle || `Draft ${new Date().toLocaleString()}`;\n    \n    try {\n      // Call the backend to store on blockchain\n      const response = await fetch(`${API_URL}/store-draft`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          content,\n          user_address: walletAddress,\n          metadata: {\n            ...(metadata || {}),\n            timestamp: Date.now(),\n            content_type: 'text',\n            word_count: content.split(/\\s+/).filter(Boolean).length,\n            title: finalTitle\n          }\n        }),\n      });\n      \n      try {\n        // Try to parse response as JSON\n        await handleResponse(response);\n        setSaveSuccess(true);\n        setTimeout(() => setSaveSuccess(false), 3000);\n        \n        // Refresh drafts after saving\n        fetchAllDrafts();\n      } catch (parseError) {\n        console.error('Error parsing store response:', parseError);\n        \n        // Fall back to mock storage\n        const mockResult = mockStoreDraft(content, {\n          ...(metadata || {}),\n          timestamp: Date.now(),\n          content_type: 'text',\n          word_count: content.split(/\\s+/).filter(Boolean).length,\n          title: finalTitle\n        });\n        \n        console.log('Used mock storage:', mockResult);\n        setSaveSuccess(true);\n        setTimeout(() => setSaveSuccess(false), 3000);\n        \n        // Refresh mock drafts\n        const mockData = mockRetrieveDrafts();\n        if (mockData.found) {\n          const processedDrafts = mockData.drafts.map(draft => ({\n            id: draft.id || `draft_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n            content: draft.content || '',\n            title: draft.metadata?.title || new Date(draft.metadata?.timestamp || Date.now()).toLocaleString(),\n            timestamp: draft.metadata?.timestamp || Date.now(),\n            wordCount: typeof draft.content === 'string' \n              ? (draft.content || '').split(/\\s+/).filter(Boolean).length\n              : 0\n          }));\n          setStoredDrafts(processedDrafts);\n        }\n      }\n      \n    } catch (error) {\n      console.error('Error saving draft:', error);\n      setError('Server error. Draft saved to local storage as fallback.');\n      \n      // Try mock storage as fallback\n      try {\n        mockStoreDraft(content, {\n          ...(metadata || {}),\n          timestamp: Date.now(),\n          content_type: 'text',\n          word_count: content.split(/\\s+/).filter(Boolean).length,\n          title: finalTitle\n        });\n        \n        setSaveSuccess(true);\n        setTimeout(() => setSaveSuccess(false), 3000);\n        \n        // Refresh mock drafts\n        const mockData = mockRetrieveDrafts();\n        if (mockData.found) {\n          const processedDrafts = mockData.drafts.map(draft => ({\n            id: draft.id || `draft_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\n            content: draft.content || '',\n            title: draft.metadata?.title || new Date(draft.metadata?.timestamp || Date.now()).toLocaleString(),\n            timestamp: draft.metadata?.timestamp || Date.now(),\n            wordCount: typeof draft.content === 'string' \n              ? (draft.content || '').split(/\\s+/).filter(Boolean).length\n              : 0\n          }));\n          setStoredDrafts(processedDrafts);\n        }\n      } catch (mockError) {\n        console.error('Mock storage also failed:', mockError);\n        setError('Failed to save draft anywhere. Please try again.');\n      }\n    } finally {\n      setSaving(false);\n    }\n  };\n  \n  // Export current draft to file\n  const exportDraft = () => {\n    if (!content || !content.trim()) {\n      alert('No content to export');\n      return;\n    }\n    \n    try {\n      let exportData, filename, dataType;\n      \n      const draftData = {\n        title: draftTitle || 'Untitled Draft',\n        content: content,\n        metadata: metadata || {\n          timestamp: Date.now(),\n          word_count: content.split(/\\s+/).filter(Boolean).length\n        },\n        exported_at: new Date().toISOString()\n      };\n      \n      if (exportFormat === 'json') {\n        exportData = JSON.stringify(draftData, null, 2);\n        filename = `${draftTitle || 'draft'}-${Date.now()}.json`;\n        dataType = 'application/json';\n      } else if (exportFormat === 'txt') {\n        exportData = `${draftTitle || 'Untitled Draft'}\\n\\n${content}\\n\\n---\\nExported: ${new Date().toLocaleString()}`;\n        filename = `${draftTitle || 'draft'}-${Date.now()}.txt`;\n        dataType = 'text/plain';\n      } else if (exportFormat === 'md') {\n        exportData = `# ${draftTitle || 'Untitled Draft'}\\n\\n${content}\\n\\n---\\n*Exported: ${new Date().toLocaleString()}*`;\n        filename = `${draftTitle || 'draft'}-${Date.now()}.md`;\n        dataType = 'text/markdown';\n      }\n      \n      // Create a Blob and download link\n      const blob = new Blob([exportData], { type: dataType });\n      const url = URL.createObjectURL(blob);\n      \n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      \n      // Clean up\n      setTimeout(() => {\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n      }, 100);\n      \n    } catch (error) {\n      console.error('Error exporting draft:', error);\n      alert('Error exporting draft: ' + error.message);\n    }\n  };\n  \n  // Import draft from file\n  const importDraft = async (e) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n    \n    setImportError('');\n    \n    try {\n      const reader = new FileReader();\n      \n      reader.onload = (event) => {\n        try {\n          const fileContent = event.target?.result;\n          if (!fileContent) throw new Error('Failed to read file');\n          \n          let importedContent, importedTitle;\n          \n          // Check file type\n          if (file.name.endsWith('.json')) {\n            // JSON format\n            const jsonData = JSON.parse(fileContent.toString());\n            importedContent = jsonData.content || '';\n            importedTitle = jsonData.title || '';\n          } else if (file.name.endsWith('.txt') || file.name.endsWith('.md')) {\n            // Text/Markdown format - simple extraction\n            const textLines = fileContent.toString().split('\\n');\n            importedTitle = textLines[0] || '';\n            importedContent = textLines.slice(2).join('\\n') || '';\n          } else {\n            throw new Error('Unsupported file format. Please use .json, .txt, or .md files.');\n          }\n          \n          // Update editor with imported content\n          if (importedContent) {\n            setContent(importedContent);\n            if (importedTitle) {\n              setDraftTitle(importedTitle);\n            }\n          } else {\n            throw new Error('Could not extract content from file');\n          }\n          \n        } catch (error) {\n          console.error('Error parsing imported file:', error);\n          setImportError('Error importing file: ' + error.message);\n        }\n      };\n      \n      reader.onerror = () => {\n        setImportError('Error reading file');\n      };\n      \n      if (file.name.endsWith('.json')) {\n        reader.readAsText(file);\n      } else if (file.name.endsWith('.txt') || file.name.endsWith('.md')) {\n        reader.readAsText(file);\n      } else {\n        setImportError('Unsupported file format. Please use .json, .txt, or .md files.');\n      }\n      \n    } catch (error) {\n      console.error('Error importing file:', error);\n      setImportError('Error importing file: ' + error.message);\n    } finally {\n      // Reset the file input\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n  \n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>Secret AI Writer</h1>\n        {isConnected ? (\n          <div style={{ \n            backgroundColor: 'white', \n            color: 'var(--secret-dark)',\n            padding: '0.5rem 1rem',\n            borderRadius: '999px',\n            display: 'flex',\n            alignItems: 'center'\n          }}>\n            <div style={{ \n              width: '8px', \n              height: '8px', \n              borderRadius: '50%', \n              backgroundColor: 'green',\n              marginRight: '8px'\n            }}></div>\n            {walletAddress ? `${walletAddress.substring(0, 8)}...${walletAddress.substring(walletAddress.length - 4)}` : 'Connected'}\n          </div>\n        ) : (\n          <button className=\"button\" onClick={connectWallet}>Connect Wallet</button>\n        )}\n      </header>\n      \n      <main className=\"main-container\">\n        <h1>Privacy-Focused AI Writing</h1>\n        <p>Create content securely with AI assistance. All your drafts are encrypted and stored on the Secret Network blockchain.</p>\n        \n        <div className=\"two-column\">\n          <div>\n            <div className=\"card\">\n              <div style={{ borderBottom: '1px solid #E5E7EB', marginBottom: '1rem' }}>\n                <div style={{ display: 'flex' }}>\n                  <button\n                    onClick={() => setActiveTab('generate')}\n                    className={`tab-button ${activeTab === 'generate' ? 'tab-active' : 'tab-inactive'}`}\n                    style={{ width: '50%' }}\n                  >\n                    Generate New Content\n                  </button>\n                  <button\n                    onClick={() => setActiveTab('enhance')}\n                    className={`tab-button ${activeTab === 'enhance' ? 'tab-active' : 'tab-inactive'}`}\n                    style={{ \n                      width: '50%',\n                      opacity: !content || !content.trim() ? 0.5 : 1,\n                      cursor: content && content.trim() ? 'pointer' : 'not-allowed'\n                    }}\n                    disabled={!content || !content.trim()}\n                  >\n                    Enhance Current Draft\n                  </button>\n                </div>\n              </div>\n              \n              {activeTab === 'generate' ? (\n                <form onSubmit={handleGenerateContent}>\n                  <textarea\n                    placeholder=\"Write a prompt for the AI...\"\n                    value={prompt || ''}\n                    onChange={(e) => setPrompt(e.target.value)}\n                    className=\"editor-area\"\n                    style={{ minHeight: '100px' }}\n                  ></textarea>\n                  <div style={{ marginTop: '1rem', textAlign: 'right' }}>\n                    <button \n                      type=\"submit\" \n                      className=\"button\"\n                      disabled={isGenerating || !prompt || !prompt.trim()}\n                      style={{ \n                        opacity: isGenerating || !prompt || !prompt.trim() ? 0.7 : 1,\n                        cursor: isGenerating || !prompt || !prompt.trim() ? 'not-allowed' : 'pointer'\n                      }}\n                    >\n                      {isGenerating ? 'Generating...' : 'Generate'}\n                    </button>\n                  </div>\n                  {isGenerating && progressMessage && (\n                    <div style={{ marginTop: '0.5rem', fontSize: '0.875rem', color: '#6B7280', display: 'flex', alignItems: 'center' }}>\n                      <div className=\"loading-spinner\" style={{ marginRight: '0.5rem' }}></div>\n                      {progressMessage}\n                    </div>\n                  )}\n                </form>\n              ) : (\n                <form onSubmit={handleEnhanceContent}>\n                  <div style={{ marginBottom: '1rem' }}>\n                    <label style={{ display: 'block', marginBottom: '0.5rem', fontSize: '0.875rem', fontWeight: 'medium' }}>\n                      Select enhancement type:\n                    </label>\n                    <select\n                      value={selectedEnhancement}\n                      onChange={(e) => setSelectedEnhancement(e.target.value)}\n                      style={{\n                        width: '100%',\n                        padding: '0.5rem',\n                        borderRadius: '0.25rem',\n                        border: '1px solid #D1D5DB',\n                      }}\n                    >\n                      {enhancementTypes.map((type) => (\n                        <option key={type.id} value={type.id}>\n                          {type.label}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  <div style={{ marginTop: '1rem', textAlign: 'right' }}>\n                    <button \n                      type=\"submit\" \n                      className=\"button\"\n                      disabled={isGenerating || !content || !content.trim()}\n                      style={{ \n                        opacity: isGenerating || !content || !content.trim() ? 0.7 : 1,\n                        cursor: isGenerating || !content || !content.trim() ? 'not-allowed' : 'pointer'\n                      }}\n                    >\n                      {isGenerating ? 'Enhancing...' : 'Enhance'}\n                    </button>\n                  </div>\n                  {isGenerating && progressMessage && (\n                    <div style={{ marginTop: '0.5rem', fontSize: '0.875rem', color: '#6B7280', display: 'flex', alignItems: 'center' }}>\n                      <div className=\"loading-spinner\" style={{ marginRight: '0.5rem' }}></div>\n                      {progressMessage}\n                    </div>\n                  )}\n                </form>\n              )}\n              \n              {error && (\n                <div className=\"error-notification\">\n                  {error}\n                </div>\n              )}\n            </div>\n            \n            <div className=\"card\">\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '0.5rem' }}>\n                <div className=\"draft-title-container\" style={{ display: 'flex', alignItems: 'center', flexGrow: 1, marginRight: '1rem' }}>\n                  <input\n                    type=\"text\"\n                    value={draftTitle || ''}\n                    onChange={(e) => setDraftTitle(e.target.value)}\n                    placeholder=\"Draft Title\"\n                    className=\"draft-title-input\"\n                    style={{\n                      fontWeight: 'bold',\n                      fontSize: '1.125rem',\n                      padding: '0.25rem 0.5rem',\n                      border: '1px solid transparent',\n                      borderRadius: '0.25rem',\n                      width: '100%',\n                      backgroundColor: 'transparent',\n                      transition: 'border-color 0.2s',\n                    }}\n                    onFocus={(e) => e.target.style.borderColor = '#9986F0'}\n                    onBlur={(e) => e.target.style.borderColor = 'transparent'}\n                  />\n                </div>\n                <div className=\"draft-actions\" style={{ display: 'flex', gap: '0.5rem' }}>\n                  <button \n                    className=\"button\" \n                    onClick={handleSaveDraft}\n                    disabled={!content || !content.trim() || saving}\n                    style={{ \n                      opacity: !content || !content.trim() || saving ? 0.7 : 1,\n                      cursor: !content || !content.trim() || saving ? 'not-allowed' : 'pointer'\n                    }}\n                  >\n                    {saving ? 'Saving...' : '🔒 Store'}\n                  </button>\n                </div>\n              </div>\n              \n              <textarea\n                className=\"editor-area\"\n                value={content || ''}\n                onChange={(e) => setContent(e.target.value)}\n                placeholder=\"AI-generated content will appear here...\"\n              ></textarea>\n              \n              {saveSuccess && (\n                <div className=\"success-notification\">\n                  Draft saved successfully!\n                </div>\n              )}\n              \n              {importError && (\n                <div className=\"error-notification\">\n                  {importError}\n                </div>\n              )}\n              \n              <div className=\"export-import-controls\" style={{ \n                marginTop: '0.75rem',\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              }}>\n                <div className=\"export-controls\" style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\n                  <select\n                    value={exportFormat}\n                    onChange={(e) => setExportFormat(e.target.value)}\n                    style={{\n                      padding: '0.25rem 0.5rem',\n                      fontSize: '0.875rem',\n                      borderRadius: '0.25rem',\n                      border: '1px solid #D1D5DB',\n                    }}\n                  >\n                    <option value=\"json\">JSON</option>\n                    <option value=\"txt\">Text</option>\n                    <option value=\"md\">Markdown</option>\n                  </select>\n                  <button \n                    type=\"button\"\n                    onClick={exportDraft}\n                    disabled={!content || !content.trim()}\n                    className=\"export-button\"\n                    style={{\n                      backgroundColor: '#F3F4F6',\n                      color: '#111827',\n                      border: 'none',\n                      padding: '0.25rem 0.5rem',\n                      borderRadius: '0.25rem',\n                      fontSize: '0.875rem',\n                      cursor: content && content.trim() ? 'pointer' : 'not-allowed',\n                      opacity: content && content.trim() ? 1 : 0.7,\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '0.25rem'\n                    }}\n                  >\n                    <span>📤</span> Export\n                  </button>\n                </div>\n                \n                <div className=\"import-controls\">\n                  <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    onChange={importDraft}\n                    accept=\".json,.txt,.md\"\n                    style={{ display: 'none' }}\n                    id=\"import-file\"\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => fileInputRef.current?.click()}\n                    className=\"import-button\"\n                    style={{\n                      backgroundColor: '#F3F4F6',\n                      color: '#111827',\n                      border: 'none',\n                      padding: '0.25rem 0.5rem',\n                      borderRadius: '0.25rem',\n                      fontSize: '0.875rem',\n                      cursor: 'pointer',\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '0.25rem'\n                    }}\n                  >\n                    <span>📥</span> Import\n                  </button>\n                </div>\n              </div>\n              \n              {metadata && (\n                <div style={{ marginTop: '0.5rem', fontSize: '0.75rem', color: '#6B7280' }}>\n                  <div style={{ display: 'flex', flexWrap: 'wrap', gap: '0.5rem' }}>\n                    <span>Word count: {(content || '').split(/\\s+/).filter(Boolean).length}</span>\n                    <span>•</span>\n                    <span>Model: {metadata.model || 'unknown'}</span>\n                    <span>•</span>\n                    <span>Processing time: {metadata.processing_time || '0'}s</span>\n                    {metadata.tx_hash && (\n                      <>\n                        <span>•</span>\n                        <span>TX: {metadata.tx_hash.substring(0, 10)}...</span>\n                      </>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <div>\n            <div className=\"card\">\n              <div style={{ borderBottom: '1px solid #E5E7EB', marginBottom: '1rem' }}>\n                <div style={{ display: 'flex' }}>\n                  <button\n                    onClick={() => setActiveSideTab('howItWorks')}\n                    className={`tab-button ${activeSideTab === 'howItWorks' ? 'tab-active' : 'tab-inactive'}`}\n                    style={{ width: '50%' }}\n                  >\n                    How It Works\n                  </button>\n                  <button\n                    onClick={() => setActiveSideTab('drafts')}\n                    className={`tab-button ${activeSideTab === 'drafts' ? 'tab-active' : 'tab-inactive'}`}\n                    style={{ width: '50%' }}\n                  >\n                    Your Drafts\n                  </button>\n                </div>\n              </div>\n              \n              {activeSideTab === 'howItWorks' ? (\n                <div className=\"how-it-works\">\n                  <ol>\n                    <li>Connect your Keplr wallet</li>\n                    <li>Write a prompt for AI</li>\n                    <li>Edit your draft</li>\n                    <li>Store privately on blockchain</li>\n                    <li>Access your drafts anywhere</li>\n                  </ol>\n                  \n                  <div style={{ marginTop: '1rem', paddingTop: '1rem', borderTop: '1px solid #E5E7EB' }}>\n                    <h3 style={{ fontSize: '1rem', fontWeight: 'medium', marginBottom: '0.5rem' }}>Features:</h3>\n                    <ul style={{ paddingLeft: '1.5rem', listStyleType: 'disc' }}>\n                      <li>AI-powered content generation</li>\n                      <li>Multiple enhancement styles</li>\n                      <li>Encrypted blockchain storage</li>\n                      <li>Export/import your drafts</li>\n                      <li>Privacy-first architecture</li>\n                    </ul>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"drafts-list\">\n                  {!isConnected ? (\n                    <p>Connect your wallet to view stored drafts</p>\n                  ) : loadingDrafts ? (\n                    <div style={{ textAlign: 'center', padding: '1rem' }}>\n                      <div className=\"loading-spinner\"></div>\n                      <p>Loading drafts...</p>\n                    </div>\n                  ) : draftError ? (\n                    <div className=\"error-notification\">\n                      {draftError}\n                    </div>\n                  ) : storedDrafts.length > 0 ? (\n                    <div className=\"drafts-container\">\n                      {storedDrafts.map((draft) => (\n                        <div key={draft.id} className=\"draft-card\" style={{ marginBottom: '0.75rem' }}>\n                          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <span style={{ fontWeight: 'medium', fontSize: '0.875rem' }}>{draft.title}</span>\n                            <span style={{ fontSize: '0.75rem', color: '#6B7280' }}>\n                              {new Date(draft.timestamp).toLocaleString()}\n                            </span>\n                          </div>\n                          <div style={{ fontSize: '0.75rem', color: '#6B7280', marginTop: '0.25rem' }}>\n                            {draft.wordCount} words\n                          </div>\n                          <div style={{ display: 'flex', gap: '0.5rem', marginTop: '0.5rem' }}>\n                            <button \n                              className=\"button\"\n                              style={{ \n                                fontSize: '0.75rem',\n                                padding: '0.25rem 0.5rem',\n                                backgroundColor: '#F3F4F6', \n                                color: '#111827',\n                                flexGrow: 1\n                              }}\n                              onClick={() => loadDraft(draft)}\n                            >\n                              Load\n                            </button>\n                            <button \n                              style={{ \n                                fontSize: '0.75rem',\n                                padding: '0.25rem 0.5rem',\n                                backgroundColor: '#FEE2E2', \n                                color: '#B91C1C',\n                                border: 'none',\n                                borderRadius: '0.25rem',\n                                cursor: 'pointer'\n                              }}\n                              onClick={() => {\n                                if (window.confirm('Are you sure you want to delete this draft?')) {\n                                  deleteDraft(draft.id);\n                                }\n                              }}\n                            >\n                              Delete\n                            </button>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <p>No stored drafts found</p>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </main>\n      \n      <footer style={{ backgroundColor: 'var(--secret-dark)', color: 'white', padding: '1rem', marginTop: '2rem', textAlign: 'center' }}>\n        <p>&copy; 2025 Secret AI Writer. All rights reserved.</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}